# :: @Changes v0.3::> Fixed z-index, Added option for $state as symbol, made symbol 2chr @ 10px, added `symbol_font_style: normal`, added `symbol_margin_top: '-25%'` 
# :: @Changes v0.3::> Added `button_mini_power`
# :: @Changes v0.3::> Remove all color settings
# :: @Changes v0.3::> Replaced `icon_width` with `icon_size` and `icon_min_size`. Changed minimum sizes of cards and icons
button_mini:
  template:
    - style_helper
    - state_helper
    - actions
    - show_only_icon
    - resizable
    - interactive
  variables:
    min_height: 45px
    min_width: 45px
    __get: >
      [[[
        return function(prop, vars, sub = undefined) {
          if (!vars.item) return vars[prop] || sub
          return vars.item[prop] || vars[prop] || sub
        }
      ]]]
    item: {}
    icon_max_size:
    icon_min_size: 35px
    # icon_width:  # :: @Breaking v0.3::> Replaced with max and min above
    symbol:
    symbol_width: 50%
    symbol_font_size: auto
    symbol_color: var( --ha-card-background, var(--card-background-color, white) )
    symbol_margin_top: 0
    symbol_padding:
  # color: "[[[ return variables.__get('color', variables) == '$state' ? 'var(--state-icon-color, var(--paper-item-icon-color))' : this.config.color ]]]"
  custom_fields:
    symbol: >
      [[[
        if (!variables.__get('symbol', variables)) return '';

        if (variables.__get('symbol', variables) == '$state') return entity.state
        
        const css = 'width: 100%; height: 100%; margin: auto; text-align: center;'
        let sym = String(variables.__get('symbol', variables))

        if (sym.search('mdi:') !== -1) {
          return `<ha-icon icon="${sym}" style="${css}"/>`
        }
        
        sym = sym.substring(0,2)
        return `<span style="${css}">${sym}</span>`
      ]]]
  styles:
    icon:
      - opacity: "[[[ return (variables.__get('symbol', variables) == '$state') ? 0.4 : 0.8 ]]]" # :: @Breaking v0.3::> Changed the Opacity of icon to 0.8 to match other cards
      # - color: "[[[ return variables.__get('color', variables) == '$state' ? 'var(--state-icon-color, var(--paper-item-icon-color))' : 'var(--paper-item-icon-color)' ]]]"
      - min-width: "[[[ return variables.__get('icon_min_size', variables) ]]]"
      - min-height: "[[[ return variables.__get('icon_min_size', variables) ]]]"
      - max-width: "[[[ return variables.__get('icon_max_size', variables) ]]]"
      - max-height: "[[[ return variables.__get('icon_max_size', variables) ]]]"
    grid:
      - position: relative
    custom_fields:
      symbol:
        - z-index: 3
        - width: "[[[ return variables.__get('symbol', variables) == '$state' ? 'auto' : variables.__get('symbol_width', variables) ]]]"
        - position: absolute
        - justify-self: "[[[ return variables.__get('symbol', variables) == '$state' ? 'end' : 'center' ]]]"
        - align-self: "[[[ return variables.__get('symbol', variables) == '$state' ? 'end' : 'center' ]]]"
        - margin-top: "[[[ return variables.__get('symbol', variables) == '$state' ? 'none' : variables.__get('symbol_margin_top', variables) ]]]"
        - padding: "[[[ return variables.__get('symbol', variables) == '$state' ? 'none' : variables.__get('symbol_padding', variables) ]]]"
        - color: >
            [[[ 
              const col = variables.__get('symbol_color', variables)

              if (
                col == 'var( --ha-card-background, var(--card-background-color, white) )' &&
                variables.__get('symbol', variables) == '$state'
                ) {
                  return '#fff'
                }

                return col
            ]]]
        - font-size: "[[[ return variables.__get('symbol_font_size', variables)  ]]]"
        - font-weight: bold
        - text-align: center
        - opacity: 0.9 # :: @Breaking v0.3::> Changed the Opacity of Symbol to 0.9

############| Button Mini - Embeded |###########################>
button_mini_embed:
  template:
    - button_mini
  variables:
    min_width:
    icon_max_size:
    icon_min_size: 40px
  color: auto
  styles:
    card:
      # - min-width: "[[[ return variables.icon_width ]]]"
      - background: none
      - box-shadow: none
      - border: 0
      - cursor: crosshair

############| Button Mini + State |###########################>
button_mini_state:
  template:
    - button_mini
  layout: icon_state
  entity: input_boolean.air_circulation
  show_state: true
  # color_type: card
  size: 25px
  styles:
    card:
      - height: 40px
      - width: 70px
    state:
      - justify-self: center
      - text-align: left
      # - margin-left: '-5px'
      - font-size: 11pt
    icon:
      - justify-self: end
      - margin-left: 5px

#########################################################################/

############| Button Mini Power |###########################>
button_mini_power:
  type: custom:button-card
  template: button_mini
  variables:
    area: 
    width: 45px
  icon: mdi:power
  color_type: card
  color: var(--accent-color)
  tap_action:
    action: call-service
    service: light.toggle
    service_data:
        area_id: "[[[ return variables.area ]]]"
  double_tap_action:
    action: call-service
    service: light.turn_on
    service_data:
        area_id: "[[[ return variables.area ]]]"
  hold_action:
    action: call-service
    service: light.turn_off
    service_data:
        area_id: "[[[ return variables.area ]]]"
  # state:
  #   - id: cbc_on
  #     value:

#########################################################################/