####{ CreativeBC }####| Entity |####[ github.com/wfurphy/creative-button-card-templates ]####>
# :: @Changes v0.3 ::> Create attributes from other entities
# :: @Changes v0.3 ::> Breaking: Changed attributes to display flex
entity:
  template: 
    - button_landscape
  variables:
    off_hide_info: true
    ## attr @deprecated v0.2 replaced by attributes
    attr: []
    attributes: []
    attribute_icon_color: var(--state-icon-color)
    __defaults:
      id: 'state'
      entity: null
      icon: 'mdi:layers-plus'
      state:
      units:
      prefix_units: false
  show_state: false
  show_label: true
  label: >
    [[[
        variables.attributes = [...variables.attr, ...variables.attributes]

        if (!variables.attributes || !variables.attributes.length) return ''

        let lab = `
          <style>
            div.cbc-attr-container {
              display: flex;
              flex-flow: row wrap;
            }
            div.cbc-attr {
              padding: 1px 4px 1px 1px
            }
            ha-icon.cbc-icon {
              color: ${variables.attribute_icon_color};
              width:18px; 
              padding-right: 5px; 
            }
            .cbc-units {
              font-size: 80%;
              opacity: 0.6;
            }
          </style>
          <div class="cbc-attr-container">
          `
        
        variables.attributes.forEach(function(a,i) {
          const at = {...variables.__defaults, ...a}
          const ae = a.entity ? states[at.entity] : entity;
          at.display = a.state ?? (at.id === 'state' ? ae.state : ae.attributes[at.id]);
          at.units = a.units ?? ae?.attributes?.unit_of_measurement;
          at.icon = a.icon ?? hass.entities[ae.entity_id]?.icon ?? at.icon;
          
          const state = `<span class="cbc-value">${at.display}</span>`;
          const units = `<span class="cbc-units">${at.units}</span>`;

          lab += `<div id="cbc-attr${i}-${at.id}" class="cbc-attr ellipsis">
                    <ha-icon icon="${at.icon}" class="cbc-icon"></ha-icon>`;
          
          if (at.prefix_units) {
            lab += units + state
          } else {
            lab += state + units
          }

          lab += `</div>`
        })
        
        return `${lab}</div>` 
    ]]]
  # state:
  #   - id: cbc_on
  #     styles:
  #       icon:
  #         - color: var(--accent-color)
  styles:
    grid:
      - grid-template-rows: >
          [[[
            if (!variables.attributes || variables.attributes.length < 2) return '1fr 1fr'

            // ::v0.3::State check for false or OFF as ON is not always the active state value.
            return entity.state && entity.state !== 'off' ? '1fr 2fr' : '1fr 1fr'
          ]]]      

          
#########################################################################/
  
